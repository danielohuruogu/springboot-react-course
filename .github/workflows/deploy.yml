name: CICD

on:
  push:
    branches: [ master ]
  # when there's a push to branch 'main' (should change this to master if the main branch of repo is master

  workflow_dispatch:

env:
  # Postgres
  POSTGRESQL_VERSION: 13.1
  POSTGRESQL_DB: acsb_fullstack
  POSTGRESQL_USER: postgres
  POSTGRESQL_PASSWORD: password
  # Java
  JAVA_VERSION: 1.17
  # DockerHub
  DOCKER_HUB_USERNAME: dano1228
  # AWS & Elastic Bean Stalk
  AWS_REGION: eu-west-2
  EB_ENVIRONMENT_NAME: Springbootreactfullstack-env
  EB_APPLICATION_NAME: springboot-react-fullstack
  EB_DEPLOYMENT_PACKAGE: elasticbeanstalk/docker-compose.yml
# these are environment variables needed to connect to EB and RDS

jobs:
  deploy: # specifying that the job is to deploy...something...?
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_DB: ${{ env.POSTGRESQL_DB }}
          POSTGRES_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps: # here's the meat of the deployment.yml file:
      - uses: 8398a7/action-slack@v3 # action made by someone else, this gets the slack message going
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'CICD ongoing... :eyes:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/checkout@v2

      - name: Setup Java JDK #setting up Java JDK on the runner
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build Number # generating a build number that includes the date
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"

      - name: Docker Login # logs in to Docker for you using environment variable and secret already present
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Maven Clean Package and Push to Dockerhub # uses Maven to build the .jar file and push to Dockerhub, the same way it happens locally
        run: |
          ./mvnw --no-transfer-progress clean package \
            -P build-frontend \
            -P jib-push-to-dockerhub \
              -Dapp.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}}
      - uses: 8398a7/action-slack@v3 # another message sent to Slack channel
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':white_check_mark: pushed dano1228/springboot-react-fullstack:${{steps.build-number.outputs.BUILD_NUMBER}} to docker hub... https://hub.docker.com/repository/docker/dano1228/springboot-react-fullstack'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update and commit app version in docker-compose.yaml
        # here is code to update the build number within the .yml file and then push to Github
        run: |
          BUILD_NUMBER=${{steps.build-number.outputs.BUILD_NUMBER}}
          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat elasticbeanstalk/docker-compose.yml)"
          sed -i -E 's_(amigoscode/springboot-react-fullstack:)([^"]*)_\1'${BUILD_NUMBER}'_' elasticbeanstalk/docker-compose.yml
          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat elasticbeanstalk/docker-compose.yml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add elasticbeanstalk/docker-compose.yml
          git commit -a -m "new app version: ${BUILD_NUMBER}"
          git push

      - uses: 8398a7/action-slack@v3 # another message to say deployment's started
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':elasticbeanstalk: :aws: Deployment started... :grimacing: :crossed_fingers:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Beanstalk Deploy # an action someone else has written to deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} deployed via github actions ${{ github.sha }}
          wait_for_deployment: 120 # just waits a minute for deployment to happen

      - uses: 8398a7/action-slack@v3 # final message to say whether it's been successful or not
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':tada: :arrow_right: http://springbootreactfullstack-env.eba-6msjnj6u.eu-west-2.elasticbeanstalk.com'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # command to always play this message whether the deployment works or not